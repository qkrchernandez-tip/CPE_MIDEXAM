---
  - name: Install and Configure Elasticsearch
    hosts: elasticsearch

    tasks:
    - name: Include variables from config.yaml
      include_vars:
        file: config.yaml

    - name: Install Elasticsearch packages need by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: default-jre
        service: ""
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Elasticsearch Prequisite by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: nginx
        service: "nginx"
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Elasticsearch using installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        package: elasticsearch
        service: ""
      when: ansible_facts['os_family'] == 'Ubuntu' 

    - name: Install Elasticsearch Prequisites-java by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "java-1.8.0-openjdk"
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Install Elasticsearch dependencies-ngix by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "nginx"
        src: ""
        dest: ""
        service: "nginx"
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Install Elasticsearch in centos by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: elasticsearch
        src: elasticsearch.repo-centos
        dest: "/etc/yum.repos.d/elasticsearch.repo"
        service: ""
      when: ansible_facts['os_family'] == 'CentOS' 

    - name: Stopping Firewall by stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Ubuntu' 

    - name: Stopping Firewall by stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'CentOS' 

    - name: Configure Elasticsearch by configureelasticsearch role
      include_role:
        name: configureelasticsearch


  - name: Install and Configure Kibana
    hosts: kibana

    tasks:
    - name: Include variables from config.yaml
      include_vars:
        file: config.yaml

    - name: Install Kibana Prequisite-java by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: default-jre
        service: ""
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Kibana Prequisite-NGIX by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: nginx
        service: "nginx"
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Kibana by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        package: kibana
        service: ""
      when: ansible_facts['os_family'] == 'Ubuntu' 

    - name: Install Kibana Prequisites by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "java-1.8.0-openjdk"
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Install Elasticsearch Prequisite-NGIX using installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "nginx"
        src: ""
        dest: ""
        service: "nginx"
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Install Kibana by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: kibana
        src: elasticsearch.repo-centos
        dest: "/etc/yum.repos.d/elasticsearch.repo"
        service: ""
      when: ansible_facts['os_family'] == 'CentOS' 

    - name: Stopping Firewall by stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Debian' 

    - name: Stopping Firewall stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'CentOS' 

    - name: Configure Kibana by configurekibana role
      include_role:
        name: configurekibana


  - name: Install and Configure Logstash
    hosts: logstash

    tasks:
    - name: Include variables from config.yaml
      include_vars:
        file: config.yaml

    - name: Install Logstash Prequisite using installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: default-jre
        service: ""
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Logstash Prequisite-NGIX by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: nginx
        service: "nginx"
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Logstash by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        package: logstash
        service: ""
      when: ansible_facts['os_family'] == 'Ubuntu' 

    - name: Install Logstash Prequisites using installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "java-1.8.0-openjdk"
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Install Logstash Prequisite-NGIX using installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "nginx"
        src: ""
        dest: ""
        service: "nginx"
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Install Logstash by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: logstash
        src: elasticsearch.repo-centos
        dest: "/etc/yum.repos.d/elasticsearch.repo"
        service: ""
      when: ansible_facts['os_family'] == 'CentOS' 

    - name: Stopping Firewall in ubuntu by stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Ubuntu' 

    - name: Stoppping Firewall in centos by stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'CentOS' 

    - name: Configure Logstash by configurekibana role
      include_role:
        name: configurelogstash


        
  - name: Install and configure Nagios
    hosts: nagios

    tasks:
    - name: Include variables in config.yaml
      include_vars:
        file: config.yaml

    - name: Install Nagios Prequisites in ubuntu installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package:
          - autoconf
          - gcc
          - libc6
          - make
          - wget
          - libssl-dev
          - gawk
          - dc
          - build-essential
          - snmp
          - libnet-snmp-perl
          - gettext
          - unzip
          - apache2
          - php
          - libapache2-mod-php7.4
          - libgd-dev
          - python3
          - python3-pip
        service: ""
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Nagios Prequisites in centos installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package:
          - gcc
          - glibc
          - glibc-common
          - make
          - gettext
          - automake
          - autoconf
          - perl
          - httpd
          - php
          - wget
          - openssl-devel
          - net-snmp
          - net-snmp-utils
          - gd
          - gd-devel
          - python3
          - python3-pip
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Configure Nagios by configurenagiosubuntu role
      include_role:
        name: configurenagiosubuntu
      when: ansible_facts['os_family'] == 'Ubuntu'
    
    - name: Configure Nagios by configurenagioscentos role
      include_role:
        name: configurenagioscentos
      when: ansible_facts['os_family'] == 'CentOS' 



  - name: Install Grafana
    hosts: grafana

    tasks:
    - name: Install Grafana in Ubuntu by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://packages.grafana.com/gpg.key"
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        package: "grafana"
        service: "grafana-server"
      when: ansible_facts['os_family'] == 'Ubuntu'
    
    - name: Stopping Firewall ubuntu by stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Grafana in centos by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        src: grafana.repo-centos
        dest: "/etc/yum.repos.d/grafana.repo"
        package: grafana
        service: grafana-server
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Stopping Firewall in centos by stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'CentOS'


  - name: Install Telegraf
    hosts: influxdb

    tasks:
    - name: Install Telegraf Prequisites in ubuntu by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: gnupg2
        service: ""
      when: ansible_facts['os_family'] == 'ubuntu'

    - name: Install Telegraf Prequisites in ubuntu by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: software-properties-common
        service: ""
      when: ansible_facts['os_family'] == 'CentOS' 

    - name: Install InfluxDB in ubuntu by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://repos.influxdata.com/influxdb.key"
        repo: "deb https://repos.influxdata.com/ubuntu bionic stable"
        package: influxdb
        service: influxdb
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Telegraf in ubuntu by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: telegraf
        service: telegraf
      when: ansible_facts['os_family'] == 'Ubuntu'
    
    - name: Stopping Firewall in ubuntu by stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install InfluxDB in CentOS by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        src: influxdb.repo-centos
        dest: /etc/yum.repos.d/influxdb.repo
        package: influxdb
        service: influxdb
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Install Telegraf in CentOS by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        src: ""
        dest: ""
        package: telegraf
        service: telegraf
      when: ansible_facts['os_family'] == 'CentOS'
  
    - name: Stopping Firewall in centos by stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'CentOS'


  - name: Install Prometheus
    hosts: prometheus

    tasks:
    - name: Install Prometheus in ubuntu by installprometheusubuntu role
      include_role:
        name: installprometheusubuntu
      vars:
        src: prometheus.service
      when: ansible_facts['os_family'] == 'Ubuntu'
    
    - name: Stopping Firewall by stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install Prometheus in centos by installprometeuscentos role
      include_role:
        name: installprometheuscentos
      vars:
        src: prometheus.service
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Stopping Firewall in centos by stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'CentOS'



  - name: Install and configure HTTPD
    hosts: webserver

    tasks:
    - name: Include config.yaml variables
      include_vars:
        file: config.yaml

    - name: Install Apache by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package:
          - apache2
          - php
          - libapache2-mod-php
          - php-mysql
        service: ""
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install HTTPD by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package:
          - httpd
          - php
          - php-mysqlnd
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'CentOS' 

    - name: Configure Apache2 by configureapacheubuntu role
      include_role:
        name: configureapacheubuntu
      when: ansible_facts['os_family'] == 'Ubuntu'
  
    - name: Configure HTTPD by configurehttpdcentos role
      include_role:
        name: configurehttpdcentos
      when: ansible_facts['os_family'] == 'CentOS'


  - name: Install MariaDB
    hosts: dbserver

    tasks:
    - name: Install MariaDB by installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: mariadb-server
        service: ""
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Install MariaDB by installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: mariadb-server
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Stopping Firewall in Ubuntu
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Ubuntu'

    - name: Stopping Firewall in CentOS
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'CentOS'

    - name: Start MariaDB in ubuntu by mariadbubuntu role
      include_role:
        name: mariadbubuntu
      when: ansible_facts['os_family'] == 'Ubuntu'
    
    - name: Start MariaDB in centos using mariadbcentos role
      include_role:
        name: mariadbcentos
      when: ansible_facts['os_family'] == 'CentOS'
